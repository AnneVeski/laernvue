// If we list all the natural numbers below 10 that are multiples of 3 or 5,
// we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.
let sum = 0;
for(let i=0; i<1000; i++){
    if(i%3 == 0 || i%5 == 0){
        sum += i;
    }
}
console.log(sum);

// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.
let num1 = 1;
let num2 = 2;
sum = 0;
while(num2 < 4000000){
    if(num2%2 == 0){
        sum+=num2;
    }
    let temp= num2;
    num2 = num1 + num2;
    num1 = temp;
}
console.log(sum);

// A palindromic number reads the same both ways.
// The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
// Find the largest palindrome made from the product of two 3-digit numbers.
let answer = '';
for(let i=999; i>100; i--){
    for(let j=999;j>100; j--){
        let product = i * j;
        let word = "" + product;
        if(word == word.split('').reverse().join('') && product > answer ){
            answer = product;
        }
    }
}
console.log(answer);


// By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13,
// we can see that the 6th prime is 13.
// What is the 10 001st prime number?
let n = 0;
let num = 2;
while(n < 10001){
    let isPrime = true;
    for(let i = 2; i<num/2; i++){
        if(num % i == 0){
            isPrime = false;
            break;
        }
    }
    if(isPrime){
        n++;
    }
    num++;
}
console.log(num);